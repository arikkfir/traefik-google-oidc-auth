name: Build pull requests
run-name: 'Build PR #${{github.event.number}}'

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

defaults:
  run:
    shell: bash -eu {0}

jobs:

  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      nextWithBuild: ${{ steps.semver.outputs.nextStrict }}-pr${{github.event.number}}+${{ steps.shortsha.outputs.sha }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: rlespinasse/github-slug-action@v4
        with:
          prefix: CI_
      - uses: benjlevesque/short-sha@v2.1
        id: shortsha
      - uses: ietf-tools/semver-action@v1
        id: semver
        with:
          token: ${{ github.token }}
          branch: ${{ github.head_ref }}
          majorList: BREAKING, breaking, MAJOR, major
          minorList: FEAT, feat, FEATURE, feature
          patchList: DEVOPS, devops, FIX, fix, BUGFIX, bugfix, PERF, perf, REFACTOR, refactor, TEST, test, TESTS, tests

  test:
    name: Test
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          cache: true
          check-latest: true
          go-version-file: go.mod
      - run: go vet ./...
      - run: |
          go test -ldflags "-X 'github.com/${{ github.repository }}/internal.versionString=${VERSION}'" \
                  -v \
                  -vet=off \
                  -race \
                  -coverprofile=coverage.txt \
                  -covermode=atomic \
                  ./...
        env:
          VERSION: ${{ needs.version.outputs.nextWithBuild }}
      - uses: codecov/codecov-action@v3
        if: always()

  docker:
    name: Docker
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        with:
          install: true
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,prefix=pr${{github.event.number}}-,suffix=
            type=ref,event=pr
      - uses: docker/build-push-action@v3
        with:
          build-args: VERSION=${{ needs.version.outputs.nextWithBuild }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  helm:
    name: Helm
    needs: [version, docker]
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.version.outputs.nextWithBuild }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-helm@v3
        with:
          version: 3.10.1
      - run: helm package ./chart --app-version=${VERSION} --destination=. --version=${VERSION}
      - run: echo -n "${{ secrets.GITHUB_TOKEN }}" | helm registry login --username ${{ github.repository_owner }} --password-stdin ghcr.io
      - run: helm push traefik-google-oidc-auth-${VERSION}.tgz oci://ghcr.io/${{ github.repository_owner }}
