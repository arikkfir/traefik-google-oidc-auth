name: Build branches
run-name: Build branch ${{ github.ref_name }}

on:
  push:
    branches: [ '*' ]

defaults:
  run:
    shell: bash -eu {0}

jobs:

  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      branchSlug: ${{ env.CI_GITHUB_REF_NAME_SLUG }}
      nextWithBuild: ${{ steps.semver.outputs.nextStrict }}-branch-${{ env.CI_GITHUB_REF_NAME_SLUG }}+${{ steps.shortsha.outputs.sha }}
      nextWithUnderscoredBuild: ${{ steps.semver.outputs.nextStrict }}-branch-${{ env.CI_GITHUB_REF_NAME_SLUG }}_${{ steps.shortsha.outputs.sha }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: rlespinasse/github-slug-action@v4
        with:
          prefix: CI_
      - uses: benjlevesque/short-sha@v2.1
        id: shortsha
      - uses: ietf-tools/semver-action@v1
        id: semver
        with:
          token: ${{ github.token }}
          branch: ${{ github.ref_name }}
          majorList: BREAKING, breaking, MAJOR, major
          minorList: FEAT, feat, FEATURE, feature
          patchList: DEVOPS, devops, FIX, fix, BUGFIX, bugfix, PERF, perf, REFACTOR, refactor, TEST, test, TESTS, tests

  test:
    name: Test
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          cache: true
          check-latest: true
          go-version-file: go.mod
      - run: go vet ./...
      - run: |
          go test -ldflags "-X 'github.com/${{ github.repository }}/internal.versionString=${VERSION}'" \
                  -v \
                  -vet=off \
                  -race \
                  -coverprofile=coverage.txt \
                  -covermode=atomic \
                  ./...
        env:
          VERSION: ${{ needs.version.outputs.nextWithBuild }}
      - uses: codecov/codecov-action@v3
        if: always()

  docker:
    name: Docker
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        with:
          install: true
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,prefix=${{ needs.version.outputs.branchSlug }}-,suffix=
            type=ref,event=branch
            type=raw,value=${{ needs.version.outputs.nextWithUnderscoredBuild }}
      - uses: docker/build-push-action@v3
        with:
          build-args: VERSION=${{ needs.version.outputs.nextWithBuild }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  helm:
    name: Helm
    needs: version
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.version.outputs.nextWithBuild }}
    steps:
      - uses: azure/setup-helm@v3
        with:
          version: 3.10.1
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: arikkfir/arikkfir.github.io
          ref: master
          token: ${{ secrets.HELM_GITHUB_TOKEN }}
      - run: pwd
      - run: ls -la
      - run: helm package ./chart --app-version=${VERSION} --version=${VERSION} --destination=./arikkfir.github.io/charts/
      - name: push chart
        run: |
          helm repo index . --merge index.yaml --url https://arikkfir.github.io/charts
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add .
          git commit -m "Update charts repository"
          git push
        working-directory: arikkfir.github.io/charts
